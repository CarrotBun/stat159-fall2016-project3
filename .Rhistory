max(data$FIRST_GEN)-min(ddata$FIRST_GEN),
max(data$ADM_RATE)-min(data$ADM_RATE),
max(data$completion)-min(data$completion),
max(data$transfer)-min(data$transfer),
max(data$FAMINC)-min(data$FAMINC),
max(data$MARRIED)-min(data$MARRIED),
max(data$MN_EARN_WNE_P10)-min(data$MN_EARN_WNE_P10),
max(data$SATVR25)-min(data$SATVR25),
max(data$SATVR75)-min(data$SATVR75),
max(data$SATMT25)-min(data$SATMT25),
max(data$SATMT75)-min(data$SATMT75),
max(data$SATWR25)-min(data$SATWR25),
max(data$SATWR75)-min(data$SATWR75))
range <- c(max(data$UGDS_WHITE)-min(data$UGDS_WHITE),
max(data$UGDS_BLACK)-min(data$UGDS_BLACK),
max(data$UGDS_HISP)-min(data$UGDS_HISP),
max(data$UGDS_ASIAN)-min(data$UGDS_ASIAN),
max(data$UGDS_AIAN)-min(data$UGDS_AIAN),
max(data$UGDS_2MOR)-min(data$UGDS_2MOR),
max(data$UGDS_NRA)-min(data$UGDS_NRA),
max(data$UGDS_UNKN)-min(data$UGDS_UNKN),
max(data$AGE_ENTRY)-min(data$AGE_ENTRY),
max(data$FIRST_GEN)-min(data$FIRST_GEN),
max(data$ADM_RATE)-min(data$ADM_RATE),
max(data$completion)-min(data$completion),
max(data$transfer)-min(data$transfer),
max(data$FAMINC)-min(data$FAMINC),
max(data$MARRIED)-min(data$MARRIED),
max(data$MN_EARN_WNE_P10)-min(data$MN_EARN_WNE_P10),
max(data$SATVR25)-min(data$SATVR25),
max(data$SATVR75)-min(data$SATVR75),
max(data$SATMT25)-min(data$SATMT25),
max(data$SATMT75)-min(data$SATMT75),
max(data$SATWR25)-min(data$SATWR25),
max(data$SATWR75)-min(data$SATWR75))
data_frame <- data.frame (categories, sd, iqr, range)
categories <- c('White', 'Black', 'Hispanic', 'Asian', 'American Indian/Alaska Native',
'2 or More Races', 'Non-Resident Alien', 'Unknown','Age Entry',
'First Generation', 'Admission Rate', 'Completion Rate', 'Transfer Rate',
'Family Income', 'Proportion of Married Students', 'Average Wage after 10 Yrs',
'SAT Verbal 25%', 'SAT Verbal 75%', 'SAT Math 25%', 'SAT Math 75%',
'SAT Writing 25%', 'SAT Writing 75%')
data_frame <- data.frame (categories, sd, iqr, range)
data_frame <- data.frame (categories, sd, range)
View(data_frame)
data$UGDS_WHITE <- as.numeric(data$UGDS_WHITE)
data$UGDS_BLACK <- as.numeric(data$UGDS_BLACK)
data$UGDS_HISP <- as.numeric(data$UGDS_HISP)
data$UGDS_ASIAN <- as.numeric(data$UGDS_ASIAN)
data$UGDS_AIAN <- as.numeric(data$UGDS_AIAN)
data$UGDS_2MOR <- as.numeric(data$UGDS_2MOR)
data$UGDS_NRA<- as.numeric(data$UGDS_NRA)
data$UGDS_UNKN <- as.numeric(data$UGDS_UNKN)
data$AGE_ENTRY <- as.numeric(data$AGE_ENTRY)
data$FIRST_GEN <- as.numeric(data$FIRST_GEN)
data$FAMINC <- as.numeric(data$UGDS_FAMINC)
data$ADM_RATE <- as.numeric(data$ADM_RATE)
data$FAMINC <- as.numeric(data$FAMINC)
data$ADM_RATE <- as.numeric(data$ADM_RATE)
data$MARRIED <- as.numeric(data$MARRIED)
data$MN_EARN_WNE_P10 <- as.numeric(data$MN_EARN_WNE_P10)
data$UGDS_WHITE <- as.numeric(data$UGDS_WHITE)
data$UGDS_BLACK <- as.numeric(data$UGDS_BLACK)
data$UGDS_HISP <- as.numeric(data$UGDS_HISP)
data$UGDS_ASIAN <- as.numeric(data$UGDS_ASIAN)
data$UGDS_AIAN <- as.numeric(data$UGDS_AIAN)
data$UGDS_2MOR <- as.numeric(data$UGDS_2MOR)
data$UGDS_NRA<- as.numeric(data$UGDS_NRA)
data$UGDS_UNKN <- as.numeric(data$UGDS_UNKN)
data$AGE_ENTRY <- as.numeric(data$AGE_ENTRY)
data$FIRST_GEN <- as.numeric(data$FIRST_GEN)
data$FAMINC <- as.numeric(data$FAMINC)
data$ADM_RATE <- as.numeric(data$ADM_RATE)
data$MARRIED <- as.numeric(data$MARRIED)
data$MN_EARN_WNE_P10 <- as.numeric(data$MN_EARN_WNE_P10)
data$SATVR25 <- as.numeric(data$SATVR25)
data$SATVR75 <- as.numeric(data$SATVR75)
data$SATMT25 <- as.numeric(data$SATMT25)
data$SATMT75 <- as.numeric(data$SATMT75)
data$SATWR25 <- as.numeric(data$SATWR25)
data$SATWR75 <- as.numeric(data$SATWR75)
quant <- data.frame(data$UGDS_WHITE, data$UGDS_BLACK,
data$UGDS_HISP, data$UGDS_ASIAN,
data$UGDS_AIAN, data$UGDS_2MOR, data$UGDS_NRA, data$UGDS_UNKN,
data$AGE_ENTRY, data$FIRST_GEN, data$ADM_RATE,
data$completion, data$transfer, data$FAMINC, data$MARRIED,
data$MN_EARN_WNE_P10, data$SATVR25, data$SATVR75, data$SATMT25,
data$SATMT75, data$SATWR25, data$SATWR75)
correlation_matrix <- cor(quant, use = "complete.obs")
correlation_matrix[lower.tri(correlation_matrix)] <- ''
sink('data/outputs/eda-correlation-matrix.txt')
print(correlation_matrix)
sink()
png('images/histogram-SATVR25.png')
ggplot(data = data) +
geom_histogram(aes(SATVR25), binwidth = 50,
col = '#000000',fill = '#f55449') +
xlab('SAT Verbal Score') +
ylab('Count') +
ggtitle('Histogram of SATVR25')
dev.off()
png('images/histogram-SATVR75.png')
ggplot(data = data) +
geom_histogram(aes(SATVR75), binwidth = 50,
col = '#000000',fill = '#f55449') +
xlab('SAT Verbal Score') +
ylab('Count') +
ggtitle('Histogram of SATVR75')
dev.off()
png('images/histogram-SATMT25.png')
ggplot(data = data) +
geom_histogram(aes(SATMT25), binwidth = 50,
col = '#000000',fill = '#b698ff') +
xlab('SAT Math Score') +
ylab('Count') +
ggtitle('Histogram of SATMT25')
dev.off()
png('images/histogram-SATMT75.png')
ggplot(data = data) +
geom_histogram(aes(SATMT75), binwidth = 50,
col = '#000000',fill = '#b698ff') +
xlab('SAT Math Score') +
ylab('Count') +
ggtitle('Histogram of SATMT75')
dev.off()
png('images/histogram-SATWR25.png')
ggplot(data = data) +
geom_histogram(aes(SATWR25), binwidth = 50,
col = '#000000',fill = '#9bcdff') +
xlab('SAT Writing Score') +
ylab('Count') +
ggtitle('Histogram of SATWR25')
dev.off()
png('images/histogram-SATWR75.png')
ggplot(data = data) +
geom_histogram(aes(SATWR75), binwidth = 50,
col = '#000000',fill = '#9bcdff') +
xlab('SAT Writing Score') +
ylab('Count') +
ggtitle('Histogram of SATWR75')
dev.off()
#Histogram for Completion
png('images/histogram-completion.png')
ggplot(data = data) +
geom_histogram(aes(completion), binwidth = .10,
col = '#000000',fill = '#008080') +
xlab('Completion Rate') +
ylab('Count') +
ggtitle('Histogram of Completion Rates')
dev.off()
#Histogram for Transfer
png('images/histogram-transfer.png')
ggplot(data = data) +
geom_histogram(aes(transfer), binwidth = .10,
col = '#000000',fill = '#dc166a') +
xlab('Transfer Rate') +
ylab('Count') +
ggtitle('Histogram of Transfer Rates')
dev.off()
#Histogram for Admission
png('images/histogram-admission.png')
ggplot(data = data) +
geom_histogram(aes(ADM_RATE), binwidth = .10,
col = '#000000',fill = '#e0f5ee') +
xlab('Admission Rate') +
ylab('Count') +
ggtitle('Histogram of Admission Rates')
dev.off()
#Histogram for State Numbers
png('images/histogram-state.png')
ggplot(data = data) +
geom_histogram(aes(ST_FIPS), binwidth = 1,
col = '#000000',fill = '#ff7373') +
xlab('State Code') +
ylab('Count') +
ggtitle('Histogram of Distribution of States')
dev.off()
#Histogram for Average Wage After to Years
png('images/histogram-average-wage.png')
ggplot(data = data) +
geom_histogram(aes(MN_EARN_WNE_P10), binwidth = 10000,
col = '#000000',fill = '#f3ff8d') +
xlab('Wage') +
ylab('Count') +
ggtitle('Histogram of Distribution of Average Wage After 10 Years')
dev.off()
#Histogram for Family Income
png('images/histogram-family-income.png')
ggplot(data = data) +
geom_histogram(aes(FAMINC), binwidth = 10000,
col = '#000000',fill = '#ffd28d') +
xlab('Income') +
ylab('Count') +
ggtitle('Histogram of Distribution of Family Income')
dev.off()
#Histogram for First Generation Student
png('images/histogram-first-generation.png')
ggplot(data = data) +
geom_histogram(aes(FIRST_GEN), binwidth = .1,
col = '#000000',fill = '#9cff8d') +
xlab('Rate') +
ylab('Count') +
ggtitle('Histogram of Distribution of First Generation College Students')
dev.off()
#Histogram for Marriage Rates
png('images/histogram-married.png')
ggplot(data = data) +
geom_histogram(aes(MARRIED), binwidth = .1,
col = '#000000',fill = '#4d6fbe') +
xlab('Rate') +
ylab('Count') +
ggtitle('Histogram of Marriage Rates')
dev.off()
#Histogram for Women Rates
png('images/histogram-women.png')
ggplot(data = data) +
geom_histogram(aes(UGDS_WOMEN), binwidth = .1,
col = '#000000',fill = '#f9b6ec') +
xlab('Rate') +
ylab('Count') +
ggtitle('Histogram of Distribution of Percentage of Women')
dev.off()
#Histogram for Men Rates
png('images/histogram-men.png')
ggplot(data = data) +
geom_histogram(aes(1-UGDS_WOMEN), binwidth = .1,
col = '#000000',fill = '#b6dcf9') +
xlab('Rate') +
ylab('Count') +
ggtitle('Histogram of Distribution of Percentage of Men')
dev.off()
#Histogram for Average Age when Entering College
png('images/histogram-age-entering.png')
ggplot(data = data) +
geom_histogram(aes(AGE_ENTRY), binwidth = 2,
col = '#000000',fill = '#ccb6f9') +
xlab('Age') +
ylab('Count') +
ggtitle('Histogram of Average Age when Entering College')
dev.off()
#Histograms for Each Race
png('images/histogram-UGDS-white.png')
ggplot(data = data) +
geom_histogram(aes(UGDS_WHITE), binwidth = .1,
col = '#000000',fill = '#fbf004') +
xlab('Age') +
ylab('Count') +
ggtitle('Histogram of Percentage of UGDS White')
dev.off()
png('images/histogram-UGDS-black.png')
ggplot(data = data) +
geom_histogram(aes(UGDS_BLACK), binwidth = .1,
col = '#000000',fill = '#8555fd') +
xlab('Age') +
ylab('Count') +
ggtitle('Histogram of Percentage of UGDS black')
dev.off()
png('images/histogram-UGDS-hispanic.png')
ggplot(data = data) +
geom_histogram(aes(UGDS_HISP), binwidth = .1,
col = '#000000',fill = '#c7eef6') +
xlab('Age') +
ylab('Count') +
ggtitle('Histogram of Percentage of UGDS Hispanic')
dev.off()
png('images/histogram-UGDS-asian.png')
ggplot(data = data) +
geom_histogram(aes(UGDS_ASIAN), binwidth = .1,
col = '#000000',fill = '#ffc5c5') +
xlab('Age') +
ylab('Count') +
ggtitle('Histogram of Percentage of UGDS Asian')
dev.off()
png('images/histogram-UGDS-aian.png')
ggplot(data = data) +
geom_histogram(aes(UGDS_AIAN), binwidth = .1,
col = '#000000',fill = '#f9f6b9') +
xlab('Age') +
ylab('Count') +
ggtitle('Histogram of Percentage of UGDS American Indian/Alaska Native')
dev.off()
png('images/histogram-UGDS-nhpi.png')
ggplot(data = data) +
geom_histogram(aes(UGDS_NHPI), binwidth = .1,
col = '#000000',fill = '#b8f2c2') +
xlab('Age') +
ylab('Count') +
ggtitle('Histogram of Percentage of UGDS Native Hawaiian/Pacific Islander')
dev.off()
png('images/histogram-UGDS-2mor.png')
ggplot(data = data) +
geom_histogram(aes(UGDS_2MOR), binwidth = .1,
col = '#000000',fill = '#b2cdfb') +
xlab('Age') +
ylab('Count') +
ggtitle('Histogram of Percentage of UGDS 2 or More Races')
dev.off()
png('images/histogram-UGDS-unknown.png')
ggplot(data = data) +
geom_histogram(aes(UGDS_UNKN), binwidth = .1,
col = '#000000',fill = '#cfffc0') +
xlab('Age') +
ylab('Count') +
ggtitle('Histogram of Percentage of UGDS Unknown')
dev.off()
png('images/histogram-UGDS-nra.png')
ggplot(data = data) +
geom_histogram(aes(UGDS_NRA), binwidth = .1,
col = '#000000',fill = '#ffc0ee') +
xlab('Age') +
ylab('Count') +
ggtitle('Histogram of Percentage of UGDS Non-Resident Alien')
dev.off()
ggplot(data = data) +
geom_histogram(aes(UGDS_NRA), binwidth = .1,
col = '#000000',fill = '#ffc0ee') +
xlab('Age') +
ylab('Count') +
ggtitle('Histogram of Percentage of UGDS Non-Resident Alien')
categories <- c('White', 'Black', 'Hispanic', 'Asian', 'American Indian/Alaska Native',
'2 or More Races', 'Non-Resident Alien', 'Unknown','Age Entry',
'First Generation', 'Admission Rate', 'Completion Rate', 'Transfer Rate',
'Family Income', 'Proportion of Married Students', 'Average Wage after 10 Yrs',
'SAT Verbal 25%', 'SAT Verbal 75%', 'SAT Math 25%', 'SAT Math 75%',
'SAT Writing 25%', 'SAT Writing 75%')
sd <- c(sd(data$UGDS_WHITE), sd(data$UGDS_BLACK),
sd(data$UGDS_HISP), sd(data$UGDS_ASIAN),
sd(data$UGDS_AIAN), sd(data$UGDS_2MOR), sd(data$UGDS_NRA), sd(data$UGDS_UNKN),
sd(data$AGE_ENTRY), sd(data$FIRST_GEN), sd(data$ADM_RATE),
sd(data$completion), sd(data$transfer), sd(data$FAMINC), sd(data$MARRIED),
sd(data$MN_EARN_WNE_P10), sd(data$SATVR25), sd(data$SATVR75), sd(data$SATMT25),
sd(data$SATMT75), sd(data$SATWR25), sd(data$SATWR75))
range <- c(max(data$UGDS_WHITE)-min(data$UGDS_WHITE),
max(data$UGDS_BLACK)-min(data$UGDS_BLACK),
max(data$UGDS_HISP)-min(data$UGDS_HISP),
max(data$UGDS_ASIAN)-min(data$UGDS_ASIAN),
max(data$UGDS_AIAN)-min(data$UGDS_AIAN),
max(data$UGDS_2MOR)-min(data$UGDS_2MOR),
max(data$UGDS_NRA)-min(data$UGDS_NRA),
max(data$UGDS_UNKN)-min(data$UGDS_UNKN),
max(data$AGE_ENTRY)-min(data$AGE_ENTRY),
max(data$FIRST_GEN)-min(data$FIRST_GEN),
max(data$ADM_RATE)-min(data$ADM_RATE),
max(data$completion)-min(data$completion),
max(data$transfer)-min(data$transfer),
max(data$FAMINC)-min(data$FAMINC),
max(data$MARRIED)-min(data$MARRIED),
max(data$MN_EARN_WNE_P10)-min(data$MN_EARN_WNE_P10),
max(data$SATVR25)-min(data$SATVR25),
max(data$SATVR75)-min(data$SATVR75),
max(data$SATMT25)-min(data$SATMT25),
max(data$SATMT75)-min(data$SATMT75),
max(data$SATWR25)-min(data$SATWR25),
max(data$SATWR75)-min(data$SATWR75))
data_frame <- data.frame (categories, sd, range)
View(data_frame)
data_frame <- data.frame (categories, sd, range, use = "complete.obs")
View(data_frame)
data_frame <- data.frame (categories, sd, range)
data_frame <- data.frame (categories, sd, range, na.rm = TRUE)
data_frame <- data.frame (categories, sd, range)
categories <- c('White', 'Black', 'Hispanic', 'Asian', 'American Indian/Alaska Native',
'2 or More Races', 'Non-Resident Alien', 'Unknown','Admission Rate')
sd <- c(sd(data$UGDS_WHITE), sd(data$UGDS_BLACK),
sd(data$UGDS_HISP), sd(data$UGDS_ASIAN),
sd(data$UGDS_AIAN), sd(data$UGDS_2MOR), sd(data$UGDS_NRA), sd(data$UGDS_UNKN),
sd(data$ADM_RATE))
iqr <- c(IQR(data$UGDS_WHITE), IQR(data$UGDS_BLACK),
IQR(data$UGDS_HISP), IQR(data$UGDS_ASIAN),
IQR(data$UGDS_AIAN), IQR(data$UGDS_2MOR), IQR(data$UGDS_NRA), IQR(data$UGDS_UNKN),
IQR(data$ADM_RATE))
range <- c(max(data$UGDS_WHITE)-min(data$UGDS_WHITE),
max(data$UGDS_BLACK)-min(data$UGDS_BLACK),
max(data$UGDS_HISP)-min(data$UGDS_HISP),
max(data$UGDS_ASIAN)-min(data$UGDS_ASIAN),
max(data$UGDS_AIAN)-min(data$UGDS_AIAN),
max(data$UGDS_2MOR)-min(data$UGDS_2MOR),
max(data$UGDS_NRA)-min(data$UGDS_NRA),
max(data$UGDS_UNKN)-min(data$UGDS_UNKN),
max(data$ADM_RATE)-min(data$ADM_RATE))
data_frame <- data.frame (categories, sd, iqr, range)
View(data_frame)
sink('data/outputs/eda-output.txt')
cat('Quantitative Variable Information\n')
cat('\nSummary of UGDS White\n')
summary(data$UGDS_WHITE)
cat('\nSummary of UGDS Black\n')
summary(data$UGDS_BLACK)
cat('\nSummary of UGDS Hispanic\n')
summary(data$UGDS_HISP)
cat('\nSummary of UGDS Asian\n')
summary(data$UGDS_ASIAN)
cat('\nSummary of UGDS American Indian/Native Alaskan\n')
summary(data$UGDS_AIAN)
cat('\nSummary of UGDS 2 or More Races\n')
summary(data$UGDS_2MOR)
cat('\nSummary of UGDS Non-Resident Alien\n')
summary(data$UGDS_NRA)
cat('\nSummary of UGDS Unknown\n')
summary(data$UGDS_UNKN)
cat('\nSummary of Admission Rate\n')
summary(data$ADM_RATE)
cat('\nSummary of Other Descriptive Statistics\n')
print(data_frame)
sink()
library(glmnet)
load('data/RData-files/train-test-sets.RData')
set.seed(98765)
data <- read.csv('data/colleges.csv', header = TRUE)
data$X <- NULL
grid <- 10^seq(10, -2, length = 100)
View(data)
ridge_matrix <- as.matrix(train_set[ ,-22])
View(ridge_matrix)
View(data)
View(ridge_matrix)
library(glmnet)
load('data/RData-files/train-test-sets.RData')
set.seed(98765)
data <- read.csv('data/colleges.csv', header = TRUE)
data$X <- NULL
grid <- 10^seq(10, -2, length = 100)
ridge_matrix <- as.matrix(train_set[ ,-83])
cv_ridge <- cv.glmnet(x = ridge_matrix, y = train_set$ADM_RATE, lambda = grid,
intercept = FALSE, standardize = FALSE, alpha = 0)
cv_ridge <- cv.glmnet(x = ridge_matrix, y = train_set$ADM_RATE, lambda = grid,
intercept = FALSE, standardize = FALSE, alpha = 0)
View(ridge_matrix)
class(ridge_matrix$completion)
class(ridge_matrix$completion)
ridge_matrix <- ridge_matrix[!is.na(ridge_matrix)]
cv_ridge <- cv.glmnet(x = ridge_matrix, y = train_set$ADM_RATE, lambda = grid,
intercept = FALSE, standardize = FALSE, alpha = 0)
data_nona <- complete.cases(data)
load('data/RData-files/train-test-sets.RData')
set.seed(98765)
data <- read.csv('data/colleges.csv', header = TRUE)
data$X <- NULL
data_nona <- complete.cases(train_set)
ridge_matrix <- as.matrix(train_set[data_nona,-83])
cv_ridge <- cv.glmnet(x = ridge_matrix, y = train_set$ADM_RATE, lambda = grid,
intercept = FALSE, standardize = FALSE, alpha = 0)
cv_ridge <- cv.glmnet(x = ridge_matrix, y = train_set$ADM_RATE[data_nona], lambda = grid,
intercept = FALSE, standardize = FALSE, alpha = 0)
lambda_min_ridge <- cv_ridge$lambda.min
lambda_min_ridge
cv_ridge_coef <- coef(cv_ridge, s = cv_ridge$lambda.min)
png('images/cv-ridge-mse-plot.png')
plot(cv_ridge)
dev.off()
test_nona <- complete.cases(test_set)
grid <- 10^seq(10, -2, length = 100)
train_nona <- complete.cases(train_set)
ridge_matrix <- as.matrix(train_set[train_nona,-83])
cv_ridge <- cv.glmnet(x = ridge_matrix, y = train_set$ADM_RATE[train_nona], lambda = grid,
intercept = FALSE, standardize = FALSE, alpha = 0)
lambda_min_ridge <- cv_ridge$lambda.min
lambda_min_ridge
cv_ridge_coef <- coef(cv_ridge, s = cv_ridge$lambda.min)
png('images/cv-ridge-mse-plot.png')
plot(cv_ridge)
dev.off()
test_nona <- complete.cases(test_set)
ridge_matrix_new <- as.matrix(test_set[test_nona,-83])
ridge_preditctions <- predict(cv_ridge,ridge_matrix_new, s = lambda_min_ridge)
ridge_MSE <- mean((ridge_preditctions-test_set$Balance)^2)
ridge_MSE <- mean((ridge_preditctions-test_set$ADM_RATE[test_nona])^2)
data <- read.csv('data/scaled_colleges.csv', header = TRUE)
data <- read.csv('data/scaled-colleges.csv', header = TRUE)
data$X <- NULL
scaled_data <- read.csv('data/scaled-colleges.csv', header = TRUE)
scaled_data$X <- NULL
library(glmnet)
load('data/RData-files/train-test-sets.RData')
set.seed(98765)
scaled_data <- read.csv('data/scaled-colleges.csv', header = TRUE)
scaled_data$X <- NULL
View(scaled_data)
scaled_data <- read.csv('data/scaled-colleges.csv', header = TRUE)
grid <- 10^seq(10, -2, length = 100)
train_nona <- complete.cases(train_set)
ridge_matrix <- as.matrix(train_set[train_nona,-83])
cv_ridge <- cv.glmnet(x = ridge_matrix, y = train_set$ADM_RATE[train_nona], lambda = grid,
intercept = FALSE, standardize = FALSE, alpha = 0)
lambda_min_ridge <- cv_ridge$lambda.min
cv_ridge_coef <- coef(cv_ridge, s = cv_ridge$lambda.min)
png('images/cv-ridge-mse-plot.png')
plot(cv_ridge)
dev.off()
test_nona <- complete.cases(test_set)
ridge_matrix_new <- as.matrix(test_set[test_nona,-83])
ridge_preditctions <- predict(cv_ridge,ridge_matrix_new, s = lambda_min_ridge)
ridge_MSE <- mean((ridge_preditctions-test_set$ADM_RATE[test_nona])^2)
scaled_data_nona <- complete.cases(scaled_data)
full_model <- as.matrix(scaled_data[scaled_data_nona ,-83])
scaled_data_nona <- complete.cases(scaled_data)
full_model <- as.matrix(scaled_data[scaled_data_nona ,-83])
ridge_fit <- glmnet(x = full_model, y = scaled_data$ADM_RATE[scaled_data_nona],
lambda = lambda_min_ridge,
intercept = FALSE, standardize = FALSE, alpha = 0)
ridge_coef_full <- coef(ridge_fit, s = lambda_min_ridge)
save(lambda_min_ridge, cv_ridge, ridge_MSE, ridge_coef_full,file = 'data/RData-files/ridge-regression.RData')
sink('data/outputs/ridge-regression-output.txt')
cat('Output of 10-fold Cross-Validation using Ridge Regression on the Train Data Set\n')
print(cv_ridge)
cat('\nMinimum Lambda that will help us find Best Model\n')
print(lambda_min_ridge)
cat('\nRidge MSE of Test Data Set\n')
print(ridge_MSE)
cat('\nOfficial Coefficients of Full Model using Ridge Regression\n')
print(ridge_coef_full)
sink()
